#!/bin/perl
## Written by DGC
## Fri,  4/05/2012

## problem2
## Description -

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

use Getopt::Long;
use Pod::Usage;
use strict;
use warnings;
use Cwd;
use File::Basename;
use Switch;

## Options

my $help;

Getopt::Long::Configure ('bundling');
GetOptions(
           "h|help" => \$help
           );
if ($help) {
  pod2usage({
    -verbose => 1,
    -exitval => 0
    });
};

## Main

my $max = 4000000;
my @fib;
my $i = 2;

$fib[0] = 1;
$fib[1] = 2;

while ( 1 ) {
  my $new_term = $fib[$i-1] + $fib[$i-2];
  
  last if ($new_term > $max);

  $fib[$i] = $new_term;
  $i += 1;
}

my $result;

foreach my $term (@fib) {
  $result += $term if !($term % 2);
}

print $result . "\n";

__END__
=head1 NAME

problem2 - 

=head1 SYNOPSIS

problem2 [-h]

=head1 OPTIONS

=over 1

=item B <-h>

Print help message and exit successfully.

