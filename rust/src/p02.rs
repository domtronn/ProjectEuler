// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

fn main() {
    println!("Result -> {}", sum_even_fibonacci_terms(4_000_000) );
}

fn sum_even_fibonacci_terms(limit:i64) -> i64 {
    let mut result = 2i64;

    let (mut t1, mut t2, mut t3) = (1i64, 2i64, 3i64);
    let (mut t1_even, mut t2_even) = (false, true);
    let mut t3_even;
    
    while t3 < limit {
        t3 = t1 + t2;
        t3_even = t2_even == t1_even;

        if t3_even { result += t3; }

        t1 = t2; t1_even = t2_even;
        t2 = t3; t2_even = t3_even;
    }

    return result;
}
